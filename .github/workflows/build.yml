name: Build Workflow
on: [ push, pull_request ]

env:
  premake: 5.0.0-beta1

jobs:
  build:
    name: Build (${{ matrix.config }})
    runs-on: windows-latest

    strategy:
      matrix:
        config: [ Debug, Release ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Create environment variables
        run: |
          $shaShort = (git rev-parse --short $env:GITHUB_SHA)
          echo "SHA_SHORT=${shaShort}" | Out-File -FilePath $env:GITHUB_ENV -Encoding UTF8 -Append

          $config = "${{ matrix.config }}".ToLower()
          echo "CONFIG_LOWERCASE=${config}" | Out-File -FilePath $env:GITHUB_ENV -Encoding UTF8 -Append

      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - name: Download Premake
        shell: powershell
        run: Invoke-WebRequest https://github.com/premake/premake-core/releases/download/v${{ env.premake }}/premake-${{ env.premake }}-windows.zip -OutFile ./premake/premake.zip

      - name: Extract Premake
        shell: powershell
        run: Expand-Archive -Path ./premake/premake.zip -DestinationPath ./premake

      - name: Generate projects
        run: |
          cd premake
          ./generate_projects.bat

      - name: Build
        run: |
          cd premake/projects
          MSBuild.exe RED4ext.sln -v:minimal -m -property:Configuration=${{ matrix.config }}

      - name: Prepare files
        run: |
          # Create the necessary directories.
          New-Item -ItemType directory -Path artifacts | Out-Null
          New-Item -ItemType directory -Path artifacts/red4ext | Out-Null
          New-Item -ItemType directory -Path artifacts/red4ext/libs | Out-Null
          New-Item -ItemType directory -Path artifacts/red4ext/plugins | Out-Null
          New-Item -ItemType directory -Path artifacts/bin/x64 | Out-Null

          # Copy build artifacts.
          Copy-Item -Path build/${{ matrix.config }}/bin/RED4ext.* -Destination artifacts/red4ext
          Copy-Item -Path build/${{ matrix.config }}/bin/powrprof.* -Destination artifacts/bin/x64
          Copy-Item -Path build/${{ matrix.config }}/bin/plugins/* -Destination artifacts/red4ext/plugins -Recurse
          Copy-Item -Path build/${{ matrix.config }}/libs/* -Destination artifacts/red4ext/libs -Recurse

          # Copy the license.
          $thirdparty = Get-Content -Path THIRD_PARTY_LICENSES.md
          Add-Content -Path artifacts/red4ext/LICENSE.txt -Value $thirdparty

          # The code below is commented, see https://github.com/actions/upload-artifact/issues/39#issuecomment-598825674.
          # Create a zip file.
          #$fileName = "red4ext_${env:CONFIG_LOWERCASE}_${env:SHA_SHORT}.zip"
          #Compress-Archive -Path artifacts/* -DestinationPath $fileName

          # Generate hash.
          #Get-FileHash -Algorithm SHA256 -Path $fileName | Format-List

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: red4ext_${{ env.CONFIG_LOWERCASE }}_${{ env.SHA_SHORT }}
          path: artifacts/
